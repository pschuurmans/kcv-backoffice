version: 2
jobs:
    build:
        docker:
            - image: circleci/node:10.16-browsers
        working_directory: ~/project
        steps:
            - checkout
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            - restore_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Install dependencies
                command: npm install
            - run:
                name: Install functions dependencies
                command: cd functions && npm install
            - save_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
                paths:
                    - node_modules
            - run:
                name: Linting
                command: npm run lint
            - run:
                name: Testing
                command: npm run test-prod
            - run:
                name: Building
                command: npm run build-prod
            - save_cache:
                key: v1-deploy-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - dist
                    - functions
                    - firestore.indexes.json
                    - firestore.rules
                    - storage.rules
                    - package.json
                    - firebase.json
                    - .firebaserc

    build_dev:
        docker:
            - image: circleci/node:10.16-browsers
        working_directory: ~/project
        steps:
            - checkout
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            - restore_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Install dependencies
                command: npm install
            - run:
                name: Install functions dependencies
                command: cd functions && npm install
            - save_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
                paths:
                    - node_modules
            - run:
                name: Insert version number
                command: sed -i "s/circleCiBuildNr/${CIRCLE_BUILD_NUM}/g" src/app/containers/login/login.component.html
            - run:
                name: Linting
                command: npm run lint
            - run:
                name: Testing
                command: npm run test-prod
            - run:
                name: Building
                command: npm run build-dev
            - save_cache:
                key: v1-deploy_dev-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - dist
                    - functions
                    - firestore.indexes.json
                    - firestore.rules
                    - storage.rules
                    - package.json
                    - firebase.json
                    - .firebaserc                    

    deploy:
        docker:
            - image: circleci/node:10.16
        working_directory: ~/project
        steps:
            - restore_cache:
                key: v1-deploy-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Deploy Master to Firebase
                command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN --project kcv-backoffice

    deploy_dev:
        docker:
            - image: circleci/node:10.16
        working_directory: ~/project
        steps:
            - restore_cache:
                key: v1-deploy_dev-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
            - run:
                name: Deploy Master to Firebase
                command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN                
    
workflows:
    version: 2
    build_and_deploy:
        jobs:
        - build_dev:
            filters:
                branches:
                    only: 
                        - develop
                        - release
        - deploy_dev:
            requires:
                - build_dev
            filters:
                branches:
                    only: release
        - build:
            filters:
                branches:
                    only: master
        - deploy:
            requires:
                - build